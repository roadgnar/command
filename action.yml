name: "command-action"
description: "IssueOps commands in GitHub Actions"
author: "Grant Birkinbine"
branding:
  icon: "play"
  color: "gray-dark"
inputs:
  github_token:
    description: The GitHub token used to create an authenticated client - Provided for you by default!
    default: ${{ github.token }}
    required: true
  status:
    description: The status of the GitHub Actions - For use in the post run workflow - Provided for you by default!
    default: ${{ job.status }}
    required: true
  command:
    description: 'The string to look for in comments as an IssueOps trigger/command. Example: ".lint"'
    required: false
  commands:
    description: 'Space separated list of commands to look for in comments as IssueOps triggers/commands. Example: ".lint .test .deploy"'
    required: false
  reaction:
    description: 'If set, the specified emoji "reaction" is put on the comment to indicate that the trigger was detected. For example, "rocket" or "eyes"'
    required: true
    default: "eyes"
  success_reaction:
    description: "The reaction to add to the comment that triggered the Action if its execution was successful"
    required: true
    default: "+1"
  failure_reaction:
    description: "The reaction to add to the comment that triggered the Action if its execution failed"
    required: true
    default: "-1"
  allowed_contexts:
    description: "A comma separated list of comment contexts that are allowed to trigger this IssueOps command. Pull requests and issues are the only currently supported contexts"
    required: true
    default: "pull_request"
  permissions:
    description: 'The allowed GitHub permissions an actor can have to invoke IssueOps commands - Example: "write,maintain,admin"'
    required: true
    default: "write,maintain,admin"
  allow_drafts:
    description: "Whether or not to allow this IssueOps command to be run on draft pull requests"
    required: true
    default: "false"
  allow_forks:
    description: "Whether or not to allow this IssueOps command to be run on forked pull requests"
    required: true
    default: "false"
  skip_ci:
    description: "Whether or not to require passing CI checks before this IssueOps command can be run"
    required: true
    default: "false"
  skip_reviews:
    description: "Whether or not to require reviews before this IssueOps command can be run"
    required: true
    default: "false"
  param_separator:
    description: "The separator to use for parsing parameters in comments in IssueOps commands. Parameters will are saved as outputs and can be used in subsequent steps"
    required: true
    default: "|"
  allowlist:
    description: 'A comma separated list of GitHub usernames or teams that should be allowed to use the IssueOps commands configured in this Action. If unset, then all users meeting the "permissions" requirement will be able to run commands. Example: "monalisa,octocat,my-org/my-team"'
    required: false
    default: "false"
  allowlist_pat:
    description: 'A GitHub personal access token with "read:org" scopes. This is only needed if you are using the "allowlist" option with a GitHub org team. For example: "my-org/my-team"'
    required: false
    default: "false"
  skip_completing:
    description: 'If set to "true", skip the process of completing the Action. This is useful if you want to customize the way this Action completes - For example, custom reactions, comments, etc'
    required: true
    default: "false"
outputs:
  command:
    description: The command that was found in the comment.
  triggered:
    description: 'The string "true" if the trigger was found, otherwise the string "false" - Just because the workflow was triggered does not mean it should continue. This is a step 1/2 check'
  continue:
    description: 'The string "true" if the workflow should continue, otherwise empty - Use this to conditionally control if your workflow should proceed or not. This is a step 2/2 check'
  comment_body:
    description: The comment body
  actor:
    description: The GitHub handle of the actor that invoked the IssueOps command
  params:
    description: The raw parameters that were passed into the IssueOps command
  comment_id:
    description: The comment id which triggered this action
  issue_number:
    description: The issue number which this Action was triggered on
  initial_reaction_id:
    description: The reaction id for the initial reaction on the trigger comment
  fork:
    description: 'The string "true" if the pull request is a fork, otherwise "false"'
  fork_ref:
    description: "The true ref of the fork"
  fork_label:
    description: "The API label field returned for the fork"
  fork_checkout:
    description: "The console command presented in the GitHub UI to checkout a given fork locally"
  fork_full_name:
    description: 'The full name of the fork in "org/repo" format'
  sha:
    description: "The commit sha if being used in the context of a pull request"
  ref:
    description: "The ref if being used in the context of a pull request"
runs:
  using: "node20"
  main: "dist/index.js"
  post: "dist/index.js"
